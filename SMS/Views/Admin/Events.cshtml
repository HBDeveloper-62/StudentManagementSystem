@model List<SMS.Models.EventExam>
@{
    ViewData["Title"] = "Upcoming Events / Exams";
}

<!-- Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<!-- Animate.css -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet" />

<style>
    :root {
        --primary-color: #6c5ce7;
        --secondary-color: #00cec9;
        --dark-color: #2d3436;
        --light-color: #f8f9fa;
        --success-color: #00b894;
        --warning-color: #fdcb6e;
        --danger-color: #ff7675;
    }

    body {
        background-color: #f5f7fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .page-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.5rem;
        border-radius: 12px;
        margin-bottom: 2rem;
        box-shadow: 0 10px 20px rgba(108, 92, 231, 0.2);
        position: relative;
        overflow: hidden;
    }

        .page-header::after {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 200%;
            background: rgba(255, 255, 255, 0.1);
            transform: rotate(30deg);
        }

        .page-header h2 {
            position: relative;
            z-index: 2;
            font-weight: 700;
            letter-spacing: 0.5px;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .page-header h2 i {
                margin-right: 15px;
                font-size: 1.5em;
            }

    .event-card {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        margin-bottom: 2rem;
        overflow: hidden;
        transition: all 0.3s ease;
        border: none;
    }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

    .event-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1rem 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .event-type-badge {
        background-color: white;
        color: var(--primary-color);
        padding: 0.25rem 0.75rem;
        border-radius: 50rem;
        font-size: 0.75em;
        font-weight: 700;
    }

    .event-body {
        padding: 1.5rem;
    }

    .event-date {
        display: flex;
        align-items: center;
        color: var(--dark-color);
        margin-bottom: 1rem;
    }

        .event-date i {
            margin-right: 10px;
            color: var(--primary-color);
        }

    .event-footer {
        padding: 1rem 1.5rem;
        background-color: #f8f9fa;
        border-top: 1px solid #e9ecef;
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }

    .btn-primary-custom {
        background-color: var(--primary-color);
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all 0.3s;
        border-radius: 8px;
        display: inline-flex;
        align-items: center;
    }

        .btn-primary-custom:hover {
            background-color: #5649c0;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.4);
        }

        .btn-primary-custom i {
            margin-right: 8px;
        }

    .btn-edit {
        background-color: var(--warning-color);
        border-color: var(--warning-color);
        color: #fff;
    }

    .btn-delete {
        background-color: var(--danger-color);
        border-color: var(--danger-color);
        color: #fff;
    }

    .btn-edit:hover {
        background-color: #e8b948;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(253, 203, 110, 0.3);
    }

    .btn-delete:hover {
        background-color: #e66767;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(255, 107, 129, 0.3);
    }

    .empty-state {
        text-align: center;
        padding: 3rem;
        color: #6c757d;
    }

        .empty-state i {
            font-size: 4rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 15px;
        margin-bottom: 2rem;
    }

    .filter-card {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .form-control, .form-select {
        border-radius: 8px;
        padding: 10px 15px;
        border: 1px solid #e0e0e0;
        transition: all 0.3s;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(108, 92, 231, 0.25);
        }
</style>

<div class="container py-4">
    <div class="page-header animate__animated animate__fadeIn">
        <h2><i class="fas fa-calendar-alt"></i> Upcoming Events & Exams</h2>
    </div>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-notification animate__animated animate__fadeInDown">
            <i class="fas fa-check-circle me-2"></i> @TempData["Message"]
        </div>
    }

    <!-- Action Buttons -->
    <div class="action-buttons animate__animated animate__fadeIn">
        <a href="@Url.Action("CreateEvent", "Admin")" class="btn btn-primary-custom">
            <i class="fas fa-plus-circle me-2"></i> Add New Event
        </a>
        <button class="btn btn-primary-custom" type="button" data-bs-toggle="collapse" data-bs-target="#filterEvents" aria-expanded="false" aria-controls="filterEvents">
            <i class="fas fa-filter me-2"></i> Filter Events
        </button>
    </div>

    <!-- Filter Card -->
    <div class="collapse mb-4" id="filterEvents">
        <div class="filter-card animate__animated animate__fadeIn">
            <h5 class="mb-3"><i class="fas fa-filter me-2"></i>Filter Events</h5>
            <form method="get" class="row">
                <div class="col-md-5 mb-3">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Search by title or description" />
                </div>
                <div class="col-md-5 mb-3">
                    <select name="typeFilter" class="form-select">
                        <option value="">All Types</option>
                        <option value="Exam">Exam</option>
                        <option value="Event">Event</option>
                        <option value="Holiday">Holiday</option>
                        <option value="Meeting">Meeting</option>
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-search me-2"></i> Search
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Events/Exams List -->
    <div class="row animate__animated animate__fadeIn">
        @if (Model.Any())
        {
            @foreach (var item in Model)
            {
                <div class="col-md-6 mb-4">
                    <div class="event-card">
                        <div class="event-header">
                            <strong>@item.Title</strong>
                            <span class="event-type-badge">@item.Type</span>
                        </div>
                        <div class="event-body">
                            <p class="card-text">@item.Description</p>
                            <div class="event-date">
                                <i class="fas fa-calendar-day"></i>
                                <span>@item.Date.ToString("dddd, dd MMMM yyyy")</span>
                            </div>
                        </div>
                        <div class="event-footer">
                            <a href="@Url.Action("EditEvent", "Admin", new { id = item.Id })"
                               class="btn btn-edit btn-sm">
                                <i class="fas fa-edit me-1"></i> Edit
                            </a>
                            <a href="@Url.Action("DeleteEvent", "Admin", new { id = item.Id })"
                               class="btn btn-delete btn-sm" onclick="return confirm('Are you sure you want to delete this?')">
                                <i class="fas fa-trash-alt me-1"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="empty-state">
                    <i class="fas fa-calendar-times"></i>
                    <h4>No Upcoming Events</h4>
                    <p class="text-muted">There are currently no events or exams scheduled.</p>
                    <a href="@Url.Action("CreateEvent", "Admin")" class="btn btn-primary-custom">
                        <i class="fas fa-plus-circle me-2"></i> Add First Event
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Add animation to event cards
        document.querySelectorAll('.event-card').forEach((card, index) => {
            card.style.animationDelay = `${index * 0.05}s`;
            card.classList.add('animate__animated', 'animate__fadeInUp');
        });

        // Confirmation for delete action
        document.querySelectorAll('.btn-delete').forEach(btn => {
            btn.addEventListener('click', function(e) {
                if (!confirm('Are you sure you want to delete this event?')) {
                    e.preventDefault();
                }
            });
        });

        // Toggle filter card
        const filterToggle = document.querySelector('[data-bs-target="#filterEvents"]');
        const filterCard = document.getElementById('filterEvents');

        if (filterToggle && filterCard) {
            filterToggle.addEventListener('click', function() {
                if (filterCard.classList.contains('show')) {
                    filterCard.classList.add('animate__fadeOut');
                    setTimeout(() => {
                        filterCard.classList.remove('animate__fadeOut');
                    }, 300);
                } else {
                    filterCard.classList.add('animate__fadeIn');
                    setTimeout(() => {
                        filterCard.classList.remove('animate__fadeIn');
                    }, 300);
                }
            });
        }
    </script>
}