@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .dashboard-wrapper {
        padding-top: 80px; /* Header ke neeche se start karwane ke liye */
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

    .dashboard-title h1 {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
        color: white;
    }

    .dashboard-title p {
        color: rgba(255, 255, 255, 0.6);
        margin: 5px 0 0;
        font-size: 0.95rem;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: var(--glass);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border-radius: 12px;
        padding: 20px;
        border: 1px solid var(--glass-border);
        transition: all 0.3s ease;
        cursor: pointer;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            background: rgba(108, 92, 231, 0.1);
        }

    .stat-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

        .stat-card-header h3 {
            margin: 0;
            font-size: 1rem;
            font-weight: 500;
            color: rgba(255, 255, 255, 0.7);
        }

        .stat-card-header i {
            font-size: 1.2rem;
            color: var(--primary);
        }

    .stat-card-value {
        font-size: 2rem;
        font-weight: 700;
        margin: 5px 0;
        color: white;
    }

    .stat-card-diff {
        display: flex;
        align-items: center;
        font-size: 0.85rem;
    }

        .stat-card-diff.positive {
            color: #00b894;
        }

        .stat-card-diff.negative {
            color: #d63031;
        }

    .charts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .chart-card {
        background: var(--glass);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border-radius: 12px;
        padding: 20px;
        border: 1px solid var(--glass-border);
        transition: all 0.3s ease;
    }

        .chart-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }

    .chart-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

        .chart-card-header h3 {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
            color: white;
        }

    .chart-container {
        position: relative;
        height: 300px;
        width: 100%;
    }

    @@media (max-width: 768px) {
        .charts-grid {
            grid-template-columns: 1fr;
        }

        .stat-card-value {
            font-size: 1.8rem;
        }
    }
</style>

<!-- ✅ START WRAPPER -->
<div class="dashboard-wrapper">
    <div class="dashboard-header">
        <div class="dashboard-title">
            <h1>Admin Dashboard</h1>
            <p>Welcome back! Here's what's happening with your school today.</p>
        </div>
        <div class="d-flex gap-2">
            <a href="@Url.Action("AddNewStudent", "Admin")" class="new-admission-btn animate__animated animate__fadeInDown">
                <i class="fas fa-user-plus me-1"></i> Add New Student
            </a>
            <a href="@Url.Action("AllStudents", "Admin")" class="new-admission-btn animate__animated animate__fadeInDown">
                <i class="fas fa-users me-1"></i> View All Students
            </a>
        </div>
    </div>

    <div class="stats-grid">
        <div class="stat-card" onclick="window.location.href='/Admin/StudentDetails'">
            <div class="stat-card-header">
                <h3>Total Students</h3>
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-card-value">1,248</div>
            <div class="stat-card-diff positive">
                <i class="fas fa-arrow-up"></i> 12% from last month
            </div>
        </div>
        <div class="stat-card" onclick="window.location.href='/Admin/TeacherDetails'">
            <div class="stat-card-header">
                <h3>Active Teachers</h3>
                <i class="fas fa-chalkboard-teacher"></i>
            </div>
            <div class="stat-card-value">48</div>
            <div class="stat-card-diff positive">
                <i class="fas fa-arrow-up"></i> 3 new this month
            </div>
        </div>
        <div class="stat-card" onclick="window.location.href='/Admin/AttendanceDetails'">
            <div class="stat-card-header">
                <h3>Attendance Today</h3>
                <i class="fas fa-user-check"></i>
            </div>
            <div class="stat-card-value">92%</div>
            <div class="stat-card-diff negative">
                <i class="fas fa-arrow-down"></i> 2% lower than average
            </div>
        </div>
        <div class="stat-card" onclick="window.location.href='/Admin/FeeDetails'">
            <div class="stat-card-header">
                <h3>Fee Collection</h3>
                <i class="fas fa-rupee-sign"></i>
            </div>
            <div class="stat-card-value">78%</div>
            <div class="stat-card-diff positive">
                <i class="fas fa-arrow-up"></i> 5% from last month
            </div>
        </div>
    </div>

    <div class="charts-grid">
        <div class="chart-card">
            <div class="chart-card-header">
                <h3>Student Attendance</h3>
                <select class="form-select form-select-sm bg-dark text-white border-0" style="width: 120px;">
                    <option>This Week</option>
                    <option>This Month</option>
                    <option>This Year</option>
                </select>
            </div>
            <div class="chart-container">
                <canvas id="attendanceChart"></canvas>
            </div>
        </div>
        <div class="chart-card">
            <div class="chart-card-header">
                <h3>Class-wise Performance</h3>
                <select class="form-select form-select-sm bg-dark text-white border-0" style="width: 120px;">
                    <option>Term 1</option>
                    <option>Term 2</option>
                    <option>Final</option>
                </select>
            </div>
            <div class="chart-container">
                <canvas id="performanceChart"></canvas>
            </div>
        </div>
    </div>

    <div class="charts-grid">
        <div class="chart-card">
            <div class="chart-card-header">
                <h3>Fee Collection Status</h3>
                <select class="form-select form-select-sm bg-dark text-white border-0" style="width: 120px;">
                    <option>Current Month</option>
                    <option>Last Month</option>
                    <option>Quarterly</option>
                </select>
            </div>
            <div class="chart-container">
                <canvas id="feeChart"></canvas>
            </div>
        </div>
        <div class="chart-card">
            <div class="chart-card-header">
                <h3>Teacher Availability</h3>
                <select class="form-select form-select-sm bg-dark text-white border-0" style="width: 120px;">
                    <option>Today</option>
                    <option>This Week</option>
                    <option>This Month</option>
                </select>
            </div>
            <div class="chart-container">
                <canvas id="teacherChart"></canvas>
            </div>
        </div>
    </div>
</div>
<!-- ✅ END WRAPPER -->
@section Scripts {
    <script>
        function initChart(elementId, type, data, options = {}) {
            const ctx = document.getElementById(elementId).getContext('2d');
            return new Chart(ctx, {
                type: type,
                data: data,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    onClick: function(evt, elements) {
                        if (elements.length > 0) {
                            let url = '';
                            switch(elementId) {
                                case 'attendanceChart': url = '/Admin/AttendanceDetails'; break;
                                case 'performanceChart': url = '/Admin/PerformanceDetails'; break;
                                case 'feeChart': url = '/Admin/FeeDetails'; break;
                                case 'teacherChart': url = '/Admin/TeacherDetails'; break;
                                default: url = '/Admin/Dashboard';
                            }
                            window.location.href = url;
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: 'rgba(255, 255, 255, 0.7)',
                                font: { family: 'Inter' }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(15, 15, 30, 0.9)',
                            titleColor: 'white',
                            bodyColor: 'rgba(255, 255, 255, 0.7)',
                            borderColor: 'rgba(255, 255, 255, 0.1)',
                            borderWidth: 1,
                            padding: 12,
                            usePointStyle: true
                        }
                    },
                    scales: {
                        x: {
                            grid: { color: 'rgba(255, 255, 255, 0.05)' },
                            ticks: { color: 'rgba(255, 255, 255, 0.6)' }
                        },
                        y: {
                            grid: { color: 'rgba(255, 255, 255, 0.05)' },
                            ticks: { color: 'rgba(255, 255, 255, 0.6)' }
                        }
                    },
                    ...options
                }
            });
        }

        const attendanceChart = initChart('attendanceChart', 'line', {
            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            datasets: [
                { label: 'Present', data: [92, 94, 96, 93, 95, 90], borderColor: '#6c5ce7', backgroundColor: 'rgba(108, 92, 231, 0.1)', borderWidth: 2, tension: 0.4, fill: true },
                { label: 'Absent', data: [8, 6, 4, 7, 5, 10], borderColor: '#fd79a8', backgroundColor: 'rgba(253, 121, 168, 0.1)', borderWidth: 2, tension: 0.4, fill: true }
            ]
        });

        const performanceChart = initChart('performanceChart', 'bar', {
            labels: ['Class 1', 'Class 2', 'Class 3', 'Class 4', 'Class 5'],
            datasets: [{ label: 'Average Score', data: [78, 85, 82, 88, 91], backgroundColor: 'rgba(0, 206, 201, 0.7)', borderRadius: 6 }]
        });

        const feeChart = initChart('feeChart', 'doughnut', {
            labels: ['Paid', 'Partial', 'Pending'],
            datasets: [{ data: [78, 12, 10], backgroundColor: ['rgba(108, 92, 231, 0.7)', 'rgba(253, 203, 110, 0.7)', 'rgba(255, 107, 129, 0.7)'], borderWidth: 0 }]
        });

        const teacherChart = initChart('teacherChart', 'polarArea', {
            labels: ['Present', 'Leave', 'Absent', 'On Duty'],
            datasets: [{ data: [42, 3, 2, 1], backgroundColor: ['rgba(108, 92, 231, 0.7)', 'rgba(0, 206, 201, 0.7)', 'rgba(255, 107, 129, 0.7)', 'rgba(253, 203, 110, 0.7)'], borderWidth: 0 }]
        });

        document.querySelectorAll('.chart-container canvas').forEach(canvas => {
            canvas.style.cursor = 'pointer';
        });
    </script>
}
